# instructions from:
# https://arstechnica.com/gadgets/2016/04/the-ars-guide-to-building-a-linux-router-from-scratch/
# https://askubuntu.com/questions/403802/configuring-a-network-on-a-multi-ethernet-port-server
# https://killtacknine.com/building-an-ubuntu-16-04-router-part-1-network-interfaces/
# https://www.karlrupp.net/en/computer/nat_tutorial
# https://help.ubuntu.com/community/IptablesHowTo

# determine interface names
ifconfig

# find interface with ip address already assigned

# edit network configuration
sudo vim /etc/network/interfaces

# add the following
# wan interface
auto <WAN_INTERFACE_NAME>
iface <WAN_INTERFACE_NAME> inet dhcp

# add the following for each interface without ip address to be used:
	# lan interface
	auto <LAN_INTERFACE_NAME>
	iface <LAN_INTERFACE_NAME> inet static
		address 192.168.99.1
		network 192.168.99.0
		netmask 255.255.255.0
		broadcast 192.168.99.255

# NOTE: when adding more interfaces, each interface must have it's own ip network.
# For example, if there are four interfaces, the ip address should be set as the following:
#    192.168.0.1
#    192.168.1.1
#    192.168.2.1
#    192.168.3.1

# Also be aware of this when setting up the DHCP.

# restart router
sudo /etc/init.d/networking restart

# check to see ip address being assigned to interface
ifconfig

# open the following file
sudo vim /etc/sysctl.conf

# uncomment following line
net.ipv4.ip_forward=1

# apply changes
sudo sysctl -p

# edit following file:
sudo nano /etc/network/if-pre-up.d/iptables

# add the following text:
	#!/bin/sh
	/sbin/iptables-restore < /etc/network/iptables

# run the following to change owners and permissions
sudo chown root /etc/network/if-pre-up.d/iptables
sudo chmod 755 /etc/network/if-pre-up.d/iptables


##
# WARNING: the following will disconnect both ssh and the internet
# 	you may want to install the dhcp server file first
##

# create/open following file
sudo vim /etc/network/iptables

# add the following to this file:
	*nat
	:PREROUTING ACCEPT [0:0]
	:INPUT ACCEPT [0:0]
	:OUTPUT ACCEPT [0:0]
	:POSTROUTING ACCEPT [0:0]

	-A POSTROUTING -o <WAN_INTERFACE_NAME> -j MASQUERADE

	COMMIT

	*filter
	:INPUT ACCEPT [0:0]
	:FORWARD ACCEPT [0:0]
	:OUTPUT ACCEPT [0:0]

	# Service rules
	-A INPUT -j DROP

	# Forwarding rules
	-A FORWARD -j DROP

	COMMIT

# run the following command to implement rules
sudo /etc/network/if-pre-up.d/iptables

# Set up DHCP and DNS
# run the following command
sudo apt-get install isc-dhcp-server

# configure the .conf file
# open following file
sudo vim /etc/dhcp/dhcpd.conf

# add the following:
	subnet 192.168.99.0 netmask 255.255.255.0 {
		range 192.168.99.100 192.168.99.199;
		option domain-name-servers 192.168.99.1;
		option subnet-mask 255.255.255.0;
		option routers 192.168.99.1;
		option broadcast-address 192.168.99.255;
	}

# run the following command
sudo apt-get install bind9

# Allow DNS and DHCP client access
# open following file for editing
sudo vim /etc/network/iptables

# Update *nat section to look like the following:
        *nat
        :PREROUTING ACCEPT [0:0]
        :INPUT ACCEPT [0:0]
        :OUTPUT ACCEPT [0:0]
        :POSTROUTING ACCEPT [0:0]

        -A POSTROUTING -o <WAN_INTERFACE_NAME> -j MASQUERADE

        COMMIT

# run the following to set up router rules
sudo /etc/network/if-pre-up.d/iptables

# view iptables rules to make sure they have been correctly assigned
sudo iptables -t nat -L -v

# Update Service rules section to look like the following:
	# Service rules

	# basic global accept rules - ICMP, loopback, traceroute, established all accepted
	-A INPUT -i lo -j ACCEPT
	-A INPUT -p icmp -j ACCEPT
	-A INPUT -m state --state ESTABLISHED -j ACCEPT

# Pinging to the router should now be enabled.
# the router should now have access to the internet

# Update Services rules section to accept lan connections:
	# Service rules
	
	# accept from lan
	-A INPUT -i <LAN_INTERFACE> -j ACCEPT
	
# communication between the LAN interface and the router should be enabled. ssh should be possible between the LAN interface and the router

# add the following forwarding rules
	-A FORWARD -i <LAN_INTERFACE> -o <WAN_INTERFACE> -j ACCEPT

	-A FORWARD -m state --state ESTABLISHED -j ACCEPT
	
# run the following to set up router rules
sudo /etc/network/if-pre-up.d/iptables

# interfaces connected to the lan port should be able to connect to the internet

# view iptables rules to make sure they have been correctly assigned
sudo iptables -L -v

# if router rules are not working, try restarting the router.
# simple tests can be run using ping.
# plug in a device to the LAN port. If device receives an IP address, DHCP is working correctly.
# run the command
ifconfig
# on the router to determine LAN and WAN ip addresses. From the LAN connected device, try to ping the LAN and WAN ip addresses.
# if that succeeds, attempt to ping outside server, such as www.google.com

# debugging can also be done by looking at package counts with:
sudo iptables -L -v

# logging can be added with the following statement:
-A <INPUT/OUTPUT/FORWARD> -i <IN> -o <OUT> -j LOG --log-prefix "<LOG_PREFIX>" --log-level 7

#logging can be found in the file /var/log/syslog


##
# Keep in mind these router rules are extremely basic. Almost all access to the LAN is accepted.
##
